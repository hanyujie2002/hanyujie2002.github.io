{"_path":"/blog/en/no.4_fermat_algorithm_-_a_great_way_to_cheak_whether_or_not_a_int_num_is_a_prime_num","_dir":"en","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"No4FermatAlgorithm AGreatWayToCheakWhetherOrNotAIntNumIsAPrimeNum","description":"I presuppose that you know what prime num is.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"random","src":"https://api.ixiaowai.cn/api/api.php"},"children":[]},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"I presuppose that you know what prime num is."}]}]},{"type":"element","tag":"h2","props":{"id":"problem"},"children":[{"type":"text","value":"Problem"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How to judge whether or not a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"int"}]},{"type":"text","value":" num $n$ is a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"prime num"}]},{"type":"text","value":"?"}]},{"type":"element","tag":"h2","props":{"id":"solution"},"children":[{"type":"text","value":"Solution"}]},{"type":"element","tag":"h4","props":{"id":"solution-one"},"children":[{"type":"text","value":"Solution one"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This solution is easy to thought out. Just traversing from $1$ to $n-1$, if any num being traversed if divisible by $n$, then it's a composite num."}]},{"type":"element","tag":"code","props":{"className":["language-Python"],"code":"def is_prime(n):  # the input num n is the num we want to judge\n if n == 1: return False  # special judge, if the num is one, then it's not a prime num\n for i in range(2, n):  # try every int num in [2, n-1] \n  if not n%i: return False  # i < n, so if n%i == 0, then n must be a composite num.\n return True  # if there are no num which is between 1 and n-1 is divisible by n, then n is a prime num\n","language":"Python","meta":""},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"def is_prime(n):  # the input num n is the num we want to judge\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" if n == 1: return False  # special judge, if the num is one, then it's not a prime num\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" for i in range(2, n):  # try every int num in [2, n-1] \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  if not n%i: return False  # i < n, so if n%i == 0, then n must be a composite num.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" return True  # if there are no num which is between 1 and n-1 is divisible by n, then n is a prime num"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are a more skilled programmer or you are sensitive to numbers, you may thought out that we can just traversing int num from 2 to $\\sqrt{n}$ for that any composite num could be divided into num pairs like a and b which c==a*b and if a was bigger that $\\sqrt{n}$, b must be smaller than $\\sqrt{n}$."}]},{"type":"element","tag":"code","props":{"className":["language-Python"],"code":"def is_prime_1(n):  # same to the code above\n if n == 1: return False\n for i in range(2, int(n**0.5)+1):  # try every int num in [2, int(sqrt(i))]\n  if not n%i: return False\n return True\n","language":"Python","meta":""},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"def is_prime_1(n):  # same to the code above\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" if n == 1: return False\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" for i in range(2, int(n**0.5)+1):  # try every int num in [2, int(sqrt(i))]\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  if not n%i: return False\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" return True"}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"solution-two"},"children":[{"type":"text","value":"Solution two"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"According to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fermat's little theorem"}]},{"type":"text","value":":"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"if a num $p$ is a prime num, then $a^{p-1}\\equiv 1(mod;p)(a\\subseteq \\mathcal{z}^*;and;0<a<p)$"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, we can try some random num in "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1, p-1"}]},{"type":"text","value":", if with the random num a, $a^{p-1}\\not\\equiv 1(mod;p)$, then $p$ must not be a prime num. However, if $a^{p-1}\\equiv 1(mod;p)$, then it's still possible that p is not a prime num, so we must check it for serveral times."}]},{"type":"element","tag":"code","props":{"className":["language-Python"],"code":"def fermat(n):\n if n==2: return True  # same to the code above.\n if n&1==1 or n==1: return False  # Special judge, if n is a even num and n is not 2 or n is 1, it's not a prime num. \n\n for i in range(15):\n  a = random.randint(2, n-1)  # randomly choice a num from 2 to n-1\n  if pow(a, n-1, n) != 1: return False  # if the (n-1)th power of a mod n is not equal to 1, n must be a composite num.\n \n return True  # else n is very likely to be a prime num\n","language":"Python","meta":""},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"def fermat(n):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" if n==2: return True  # same to the code above.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" if n&1==1 or n==1: return False  # Special judge, if n is a even num and n is not 2 or n is 1, it's not a prime num. \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" for i in range(15):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  a = random.randint(2, n-1)  # randomly choice a num from 2 to n-1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  if pow(a, n-1, n) != 1: return False  # if the (n-1)th power of a mod n is not equal to 1, n must be a composite num.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" return True  # else n is very likely to be a prime num"}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"which-is-better"},"children":[{"type":"text","value":"Which is better?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"if you have a high demand for the accuracy, then you'd better choose the Solution one.\nelse if the num is quite large, you'd better choose the Solution two."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"problem","depth":2,"text":"Problem"},{"id":"solution","depth":2,"text":"Solution"}]}},"_type":"markdown","_id":"content:blog:en:No.4_Fermat_Algorithm_-_A_great_way_to_cheak_whether_or_not_a_int_num_is_a_prime_num.md","_source":"content","_file":"blog/en/No.4_Fermat_Algorithm_-_A_great_way_to_cheak_whether_or_not_a_int_num_is_a_prime_num.md","_extension":"md"}