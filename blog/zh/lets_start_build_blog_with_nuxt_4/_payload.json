[{"data":1,"prerenderedAt":495},["Reactive",2],{"content-query-jGmQmzkQT8":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"_empty":6,"title":8,"description":9,"body":10,"_type":492,"_id":493,"_source":256,"_file":494,"_extension":321},"/blog/zh/lets_start_build_blog_with_nuxt_4","zh",false,"","从零开始搭建自己的博客 四：博客文章页面","本篇文章开始负责创建博客文章页面。本博客的文章都是用 Markdown 写的。那么 Markdown 渲染的方法也有很多种，有一些 npm 包专门用来负责 Markdown 渲染，比如 markd 等；Nuxt.js 官方也提供了一个叫做 Nuxt content 的模块用来渲染 Markdown。这个模块的好处是支持文件系统路由，也就是把 Markdown 文件放在对应的项目文件夹路径里，经过很简单的配置就可以在对应网址路径渲染自己的文章。本项目使用的就是 nuxt content。",{"type":11,"children":12,"toc":487},"root",[13,21,26,33,38,43,68,73,92,97,131,149,161,237,242,247,297,316,398,410,419,470,482],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"从零开始搭建自己的博客-四博客文章页面",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25],{"type":20,"value":9},{"type":14,"tag":27,"props":28,"children":30},"h2",{"id":29},"安装-nuxt-content",[31],{"type":20,"value":32},"安装 nuxt content",{"type":14,"tag":22,"props":34,"children":35},{},[36],{"type":20,"value":37},"首先，安装 nuxt content：",{"type":14,"tag":22,"props":39,"children":40},{},[41],{"type":20,"value":42},"可以用 yarn 来安装：",{"type":14,"tag":44,"props":45,"children":49},"code",{"className":46,"code":48},[47],"language-undefined","yarn add @nuxt/content\n",[50],{"type":14,"tag":51,"props":52,"children":53},"pre",{},[54],{"type":14,"tag":44,"props":55,"children":56},{"__ignoreMap":7},[57],{"type":14,"tag":58,"props":59,"children":62},"span",{"class":60,"line":61},"line",1,[63],{"type":14,"tag":58,"props":64,"children":65},{},[66],{"type":20,"value":67},"yarn add @nuxt/content",{"type":14,"tag":22,"props":69,"children":70},{},[71],{"type":20,"value":72},"但是这个命令我没成功，我又用 npm 安装才成功的：",{"type":14,"tag":44,"props":74,"children":77},{"className":75,"code":76},[47],"npm install @nuxt/content\n",[78],{"type":14,"tag":51,"props":79,"children":80},{},[81],{"type":14,"tag":44,"props":82,"children":83},{"__ignoreMap":7},[84],{"type":14,"tag":58,"props":85,"children":86},{"class":60,"line":61},[87],{"type":14,"tag":58,"props":88,"children":89},{},[90],{"type":20,"value":91},"npm install @nuxt/content",{"type":14,"tag":27,"props":93,"children":95},{"id":94},"配置",[96],{"type":20,"value":94},{"type":14,"tag":22,"props":98,"children":99},{},[100,102,108,110,115,117,122,124,129],{"type":20,"value":101},"我们希望博客文章的 URL 路径都放在 ",{"type":14,"tag":103,"props":104,"children":105},"code-inline",{},[106],{"type":20,"value":107},"/blog/",{"type":20,"value":109}," 之后，比如一篇标题为 ",{"type":14,"tag":103,"props":111,"children":112},{},[113],{"type":20,"value":114},"example",{"type":20,"value":116}," 的文章路径即为 ",{"type":14,"tag":103,"props":118,"children":119},{},[120],{"type":20,"value":121},"/blog/example",{"type":20,"value":123},"。因此我们在 pages 目录下，创建名为 blog 的目录，然后又在新创建的 blog 目录下，创建名为 ",{"type":14,"tag":103,"props":125,"children":126},{},[127],{"type":20,"value":128},"[...slug].vue",{"type":20,"value":130}," 的文件。",{"type":14,"tag":22,"props":132,"children":133},{},[134,136,141,143,147],{"type":20,"value":135},"这个文件名字看起来很奇怪对不对？这个名字在这里起到了通配符的作用。也就是匹配一切 ",{"type":14,"tag":103,"props":137,"children":138},{},[139],{"type":20,"value":140},"/blog/*",{"type":20,"value":142}," 路径，一切 url 只要网址路径以 ",{"type":14,"tag":103,"props":144,"children":145},{},[146],{"type":20,"value":107},{"type":20,"value":148}," 为前缀，都会用这个文件来渲染网页内容。",{"type":14,"tag":22,"props":150,"children":151},{},[152,154,159],{"type":20,"value":153},"之后，在 ",{"type":14,"tag":103,"props":155,"children":156},{},[157],{"type":20,"value":158},"@/pages/blog/[...slug].vue",{"type":20,"value":160}," 中填入以下内容：",{"type":14,"tag":44,"props":162,"children":167},{"className":163,"code":165,"language":166,"meta":7},[164],"language-vue","\u003C!--  @/pages/blog/[...slug].vue -->\n\n\u003Ctemplate>\n    \u003CContentDoc />\n\u003C/template>\n","vue",[168],{"type":14,"tag":51,"props":169,"children":170},{},[171],{"type":14,"tag":44,"props":172,"children":173},{"__ignoreMap":7},[174,183,192,202,228],{"type":14,"tag":58,"props":175,"children":176},{"class":60,"line":61},[177],{"type":14,"tag":58,"props":178,"children":180},{"class":179},"ct-779485",[181],{"type":20,"value":182},"\u003C!--  @/pages/blog/[...slug].vue -->\n",{"type":14,"tag":58,"props":184,"children":186},{"class":60,"line":185},2,[187],{"type":14,"tag":58,"props":188,"children":189},{},[190],{"type":20,"value":191},"\n",{"type":14,"tag":58,"props":193,"children":195},{"class":60,"line":194},3,[196],{"type":14,"tag":58,"props":197,"children":199},{"class":198},"ct-801142",[200],{"type":20,"value":201},"\u003Ctemplate>\n",{"type":14,"tag":58,"props":203,"children":205},{"class":60,"line":204},4,[206,212,217,223],{"type":14,"tag":58,"props":207,"children":209},{"class":208},"ct-883780",[210],{"type":20,"value":211},"    ",{"type":14,"tag":58,"props":213,"children":214},{"class":198},[215],{"type":20,"value":216},"\u003C",{"type":14,"tag":58,"props":218,"children":220},{"class":219},"ct-283964",[221],{"type":20,"value":222},"ContentDoc",{"type":14,"tag":58,"props":224,"children":225},{"class":198},[226],{"type":20,"value":227}," />\n",{"type":14,"tag":58,"props":229,"children":231},{"class":60,"line":230},5,[232],{"type":14,"tag":58,"props":233,"children":234},{"class":198},[235],{"type":20,"value":236},"\u003C/template>",{"type":14,"tag":22,"props":238,"children":239},{},[240],{"type":20,"value":241},"到了这里，nuxt content 相关的东西就已经初步配置好了。但是文章到现在还没有放进项目，所以我们接下来要放博客文章进去。",{"type":14,"tag":27,"props":243,"children":245},{"id":244},"博客文章",[246],{"type":20,"value":244},{"type":14,"tag":22,"props":248,"children":249},{},[250,252,257,259,263,265,270,272,276,278,282,284,289,291,295],{"type":20,"value":251},"但是我们博客文章放哪呢？我们可以在项目根目录下，创建 ",{"type":14,"tag":103,"props":253,"children":254},{},[255],{"type":20,"value":256},"content",{"type":20,"value":258}," 文件夹。之后我们在 ",{"type":14,"tag":103,"props":260,"children":261},{},[262],{"type":20,"value":256},{"type":20,"value":264}," 文件夹里面，创建 ",{"type":14,"tag":103,"props":266,"children":267},{},[268],{"type":20,"value":269},"blog",{"type":20,"value":271}," 文件夹。然后往这个 ",{"type":14,"tag":103,"props":273,"children":274},{},[275],{"type":20,"value":269},{"type":20,"value":277}," 文件夹里面放上自己写的文章（需要是 markdown 格式）。这里我们创建 ",{"type":14,"tag":103,"props":279,"children":280},{},[281],{"type":20,"value":269},{"type":20,"value":283}," 文件夹是因为我们之前在 ",{"type":14,"tag":103,"props":285,"children":286},{},[287],{"type":20,"value":288},"/pages/",{"type":20,"value":290}," 文件夹里创建的子文件夹的名称就是 ",{"type":14,"tag":103,"props":292,"children":293},{},[294],{"type":20,"value":269},{"type":20,"value":296},"。",{"type":14,"tag":22,"props":298,"children":299},{},[300,302,307,309,314],{"type":20,"value":301},"这里我们来测试一下。在 ",{"type":14,"tag":103,"props":303,"children":304},{},[305],{"type":20,"value":306},"@/contents/blog/",{"type":20,"value":308}," 文件夹里，创建一个 markdown 文件 ",{"type":14,"tag":103,"props":310,"children":311},{},[312],{"type":20,"value":313},"example.md",{"type":20,"value":315},"。将内容填充为：",{"type":14,"tag":44,"props":317,"children":322},{"className":318,"code":320,"language":321,"meta":7},[319],"language-md","# 示例\n\n这*是*一个**测试**。\n","md",[323],{"type":14,"tag":51,"props":324,"children":325},{},[326],{"type":14,"tag":44,"props":327,"children":328},{"__ignoreMap":7},[329,344,351],{"type":14,"tag":58,"props":330,"children":331},{"class":60,"line":61},[332,338],{"type":14,"tag":58,"props":333,"children":335},{"class":334},"ct-905504",[336],{"type":20,"value":337},"#",{"type":14,"tag":58,"props":339,"children":341},{"class":340},"ct-023380",[342],{"type":20,"value":343}," 示例\n",{"type":14,"tag":58,"props":345,"children":346},{"class":60,"line":185},[347],{"type":14,"tag":58,"props":348,"children":349},{},[350],{"type":20,"value":191},{"type":14,"tag":58,"props":352,"children":353},{"class":60,"line":194},[354,359,364,369,373,378,384,390,394],{"type":14,"tag":58,"props":355,"children":356},{"class":208},[357],{"type":20,"value":358},"这",{"type":14,"tag":58,"props":360,"children":361},{"class":334},[362],{"type":20,"value":363},"*",{"type":14,"tag":58,"props":365,"children":366},{"class":208},[367],{"type":20,"value":368},"是",{"type":14,"tag":58,"props":370,"children":371},{"class":334},[372],{"type":20,"value":363},{"type":14,"tag":58,"props":374,"children":375},{"class":208},[376],{"type":20,"value":377},"一个",{"type":14,"tag":58,"props":379,"children":381},{"class":380},"ct-905502",[382],{"type":20,"value":383},"**",{"type":14,"tag":58,"props":385,"children":387},{"class":386},"ct-883782",[388],{"type":20,"value":389},"测试",{"type":14,"tag":58,"props":391,"children":392},{"class":380},[393],{"type":20,"value":383},{"type":14,"tag":58,"props":395,"children":396},{"class":208},[397],{"type":20,"value":296},{"type":14,"tag":22,"props":399,"children":400},{},[401,403,408],{"type":20,"value":402},"之后浏览器打开 ",{"type":14,"tag":103,"props":404,"children":405},{},[406],{"type":20,"value":407},"http://localhost:3000/blog/example",{"type":20,"value":409},"，然后可以看到文章渲染成功了。",{"type":14,"tag":22,"props":411,"children":412},{},[413],{"type":14,"tag":414,"props":415,"children":418},"img",{"alt":416,"src":417},"20231224221549","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20231224221549.png",[],{"type":14,"tag":22,"props":420,"children":421},{},[422,424,429,431,436,438,442,444,448,450,455,457,461,463,468],{"type":20,"value":423},"我们可以看出，",{"type":14,"tag":103,"props":425,"children":426},{},[427],{"type":20,"value":428},"@/pages/",{"type":20,"value":430}," 和 ",{"type":14,"tag":103,"props":432,"children":433},{},[434],{"type":20,"value":435},"@/contents/",{"type":20,"value":437}," 里面的目录结构是相互对应的：当我们访问 URL ",{"type":14,"tag":103,"props":439,"children":440},{},[441],{"type":20,"value":121},{"type":20,"value":443}," 时，页面路由会定位到 ",{"type":14,"tag":103,"props":445,"children":446},{},[447],{"type":20,"value":158},{"type":20,"value":449}," 文件，之后，该文件中的 ",{"type":14,"tag":103,"props":451,"children":452},{},[453],{"type":20,"value":454},"\u003CContentDoc>",{"type":20,"value":456}," 对应了 ",{"type":14,"tag":103,"props":458,"children":459},{},[460],{"type":20,"value":435},{"type":20,"value":462}," 里面的内容，之后就把 ",{"type":14,"tag":103,"props":464,"children":465},{},[466],{"type":20,"value":467},"@/contents/blog/example.md",{"type":20,"value":469}," 的内容渲染了。",{"type":14,"tag":22,"props":471,"children":472},{},[473,475,480],{"type":20,"value":474},"之后，我们就把所有自己写的博客文章都放 ",{"type":14,"tag":103,"props":476,"children":477},{},[478],{"type":20,"value":479},"@/contents/blog",{"type":20,"value":481}," 目录就行了。",{"type":14,"tag":483,"children":484},"style",[485],{"type":20,"value":486},".ct-779485{color:#616E88;}\n.ct-801142{color:#81A1C1;}\n.ct-883780{color:#D8DEE9FF;}\n.ct-283964{color:#D8DEE9;}\n.ct-905504{color:#ECEFF4;}\n.ct-023380{color:#88C0D0;}\n.ct-905502{color:#ECEFF4;font-weight:bold;}\n.ct-883782{color:#D8DEE9FF;font-weight:bold;}",{"title":7,"searchDepth":185,"depth":185,"links":488},[489,490,491],{"id":29,"depth":185,"text":32},{"id":94,"depth":185,"text":94},{"id":244,"depth":185,"text":244},"markdown","content:blog:zh:9.lets_start_build_blog_with_nuxt_4.md","blog/zh/9.lets_start_build_blog_with_nuxt_4.md",1718193178922]