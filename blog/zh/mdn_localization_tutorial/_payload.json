[{"data":1,"prerenderedAt":763},["Reactive",2],{"content-query-ti4qfXaYY6":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"_empty":6,"title":8,"description":7,"body":9,"_type":758,"_id":759,"_source":760,"_file":761,"_extension":762},"/blog/zh/mdn_localization_tutorial","zh",false,"","给 MDN 文档本地化参与新人的一些入门指导和经验分享",{"type":10,"children":11,"toc":748},"root",[12,20,27,48,54,86,91,100,105,112,125,162,167,175,180,215,228,233,241,246,251,259,264,272,277,282,290,295,300,308,318,323,331,341,354,360,374,379,387,399,404,412,418,423,428,436,444,453,461,466,473,478,484,489,560,568,608,613,731,736],{"type":13,"tag":14,"props":15,"children":17},"element","h1",{"id":16},"给-mdn-文档本地化参与新人的一些入门指导和经验分享",[18],{"type":19,"value":8},"text",{"type":13,"tag":21,"props":22,"children":24},"h2",{"id":23},"mdn-文档介绍",[25],{"type":19,"value":26},"MDN 文档介绍",{"type":13,"tag":28,"props":29,"children":30},"p",{},[31,40,42],{"type":13,"tag":32,"props":33,"children":37},"a",{"href":34,"rel":35},"https://developer.mozilla.org/",[36],"nofollow",[38],{"type":19,"value":39},"MDN 文档",{"type":19,"value":41},"，全称是 Mozilla Developer Docs（Mozilla 开发者文档，顺带一提火狐浏览器就是 Mozilla 家的），基本涵盖了前端开发的所有知识，可以说是前端开发学习必不可少的参考资料。",{"type":13,"tag":43,"props":44,"children":45},"del",{},[46],{"type":19,"value":47},"才怪，我就是看菜鸟教程入门的前端。",{"type":13,"tag":21,"props":49,"children":51},{"id":50},"mdn-文档的现状",[52],{"type":19,"value":53},"MDN 文档的现状",{"type":13,"tag":28,"props":55,"children":56},{},[57,59,66,68,75,77,84],{"type":19,"value":58},"MDN 文档现在托管在 Github 上（所以说文档的本质是代码 (￣y▽,￣)╭ ），每一篇文章都是用 Markdown 写的（关于 Markdown 的入门介绍可以参看我的",{"type":13,"tag":32,"props":60,"children":63},{"href":61,"rel":62},"https://hanyujie2002.fly.dev/blog/zh/an_introduce_to_markdown",[36],[64],{"type":19,"value":65},"这篇文章",{"type":19,"value":67},"）。所有人都可以通过 Git 这个工具来参与贡献。（不熟悉 Git？其实不用 Git 也可以贡献哦，后面介绍）MDN 文档在 Github 上主要分为两个部分，一个是 ",{"type":13,"tag":32,"props":69,"children":72},{"href":70,"rel":71},"https://github.com/mdn/content",[36],[73],{"type":19,"value":74},"Content 仓库",{"type":19,"value":76},"，存储英文文档，还有一个是 ",{"type":13,"tag":32,"props":78,"children":81},{"href":79,"rel":80},"https://github.com/mdn/translated-content",[36],[82],{"type":19,"value":83},"translated-content 仓库",{"type":19,"value":85},"，与 Content 仓库的结构基本相同，不过是存储翻译（更精确的术语，本地化）后的文档。Translated-content 仓库就是本文关注的重点啦。",{"type":13,"tag":28,"props":87,"children":88},{},[89],{"type":19,"value":90},"目前 MDN 文档的简体中文本地化还是很活跃的，差不多每天都有人提交新的翻译。但是还是很缺人手的。（以前我写代码比较英文文档和中文文档，发现有大约 8000 多篇文档没有被本地化 w(ﾟДﾟ)w，而且很多老文章质量有待提升）如果你能参与其中的话，会是对 MDN 本地化工作的极大帮助（I WANT YOU.jpg）。",{"type":13,"tag":28,"props":92,"children":93},{},[94],{"type":13,"tag":95,"props":96,"children":99},"img",{"alt":97,"src":98},"MDN_本地化招聘海报","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/MDN_%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%8B%9B%E8%81%98%E6%B5%B7%E6%8A%A5.jpg",[],{"type":13,"tag":21,"props":101,"children":103},{"id":102},"如何给自己找任务",[104],{"type":19,"value":102},{"type":13,"tag":106,"props":107,"children":109},"h3",{"id":108},"入门级提升排版",[110],{"type":19,"value":111},"入门级：提升排版",{"type":13,"tag":28,"props":113,"children":114},{},[115,117,123],{"type":19,"value":116},"首先，入门级别的任务就是提升文档的排版，早期的 MDN（迁移到 Github 之前的）的一些本地化的文档的排版工作做的很不好，有很大的提升空间。关于文档排版方面要注意的点，",{"type":13,"tag":32,"props":118,"children":121},{"href":119,"rel":120},"https://github.com/mdn/translated-content/blob/main/docs/zh-cn/translation-guide.md",[36],[122],{"type":19,"value":65},{"type":19,"value":124},"里有详细的介绍，我挑几个重要的讲：",{"type":13,"tag":126,"props":127,"children":128},"ol",{},[129,135,140,152],{"type":13,"tag":130,"props":131,"children":132},"li",{},[133],{"type":19,"value":134},"标点符号：除了代码里的符号及一些特殊情况之外，其他地方都用中文（全角符号）。",{"type":13,"tag":130,"props":136,"children":137},{},[138],{"type":19,"value":139},"中文和英文，中文和数字之间要有一个空格：传说盘古开天辟地，在天与地之间辟出了一片空白，故这个空格又名盘古之白（有一个专门搞排版的工具就叫盘古）。",{"type":13,"tag":130,"props":141,"children":142},{},[143,145,150],{"type":19,"value":144},"不要将“you”翻译为“您”，MDN 是程序员写给程序员看的文档 ",{"type":13,"tag":43,"props":146,"children":147},{},[148],{"type":19,"value":149},"程序员有，程序员治，程序员享（By the programmers, for the programmers）",{"type":19,"value":151},"，大家彼此平等也就不需要用敬辞了。",{"type":13,"tag":130,"props":153,"children":154},{},[155,157],{"type":19,"value":156},"英文单词不要用复数形式：比如说 APIs 翻译到中文之间翻译成 API 就行了。",{"type":13,"tag":43,"props":158,"children":159},{},[160],{"type":19,"value":161},"你总不能翻译成“API 们”吧。",{"type":13,"tag":28,"props":163,"children":164},{},[165],{"type":19,"value":166},"这种排版问题真的随便翻一翻就能找到很多：",{"type":13,"tag":28,"props":168,"children":169},{},[170],{"type":13,"tag":95,"props":171,"children":174},{"alt":172,"src":173},"20230917214438","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917214438.png",[],{"type":13,"tag":28,"props":176,"children":177},{},[178],{"type":19,"value":179},"比如这里就出现了汉字和字母之间没有空格的问题，这个时候肯定有同学就跃跃欲试地想要提交修改了，那么该怎么样提交呢？这里就教大家最简单的方法：",{"type":13,"tag":126,"props":181,"children":183},{"start":182},0,[184,194],{"type":13,"tag":130,"props":185,"children":186},{},[187,189],{"type":19,"value":188},"解决网络问题：",{"type":13,"tag":43,"props":190,"children":191},{},[192],{"type":19,"value":193},"这个对于大家应该都不难吧",{"type":13,"tag":130,"props":195,"children":196},{},[197,199,206,208,213],{"type":19,"value":198},"注册 Github 账号：注册账号的链接在这里 ┏ (゜ω゜)=☞ ",{"type":13,"tag":32,"props":200,"children":203},{"href":201,"rel":202},"https://github.com/signup%EF%BC%8CGithub",[36],[204],{"type":19,"value":205},"https://github.com/signup，Github",{"type":19,"value":207}," 账号实际上也就是 outlook 邮箱的账号。顺带一提直到我写这篇文章的时间（2023 年 9 月），注册 outlook 邮箱账号是不需要电话号码的，也不需要你提供一个验证邮箱 ",{"type":13,"tag":43,"props":209,"children":210},{},[211],{"type":19,"value":212},"循环套娃这是",{"type":19,"value":214},"，只需要通过机器人验证就行了。建议大家多攒两个 outlook 邮箱账号。",{"type":13,"tag":28,"props":216,"children":217},{},[218,223],{"type":13,"tag":95,"props":219,"children":222},{"alt":220,"src":221},"20230917215204","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917215204.png",[],{"type":13,"tag":43,"props":224,"children":225},{},[226],{"type":19,"value":227},"万恶之源",{"type":13,"tag":28,"props":229,"children":230},{},[231],{"type":19,"value":232},"注册完账号之后，再次回到要提交修改的那个 MDN 文章的页面上，来到文章底部，你会发现有个“Edit the page on GitHub”的链接，点击一下。",{"type":13,"tag":28,"props":234,"children":235},{},[236],{"type":13,"tag":95,"props":237,"children":240},{"alt":238,"src":239},"20230917215920","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917215920.png",[],{"type":13,"tag":28,"props":242,"children":243},{},[244],{"type":19,"value":245},"之后，来到这个文档对应地 Github 页面（没错，MDN 页面的来源就是这里），开始对对应内容进行修改（没有修改的话，那个“Commit changes”按钮是灰的）。",{"type":13,"tag":28,"props":247,"children":248},{},[249],{"type":19,"value":250},"修改完后，点击“Commit Changes”按钮（Commit Changes 就是提交修改的意思）。",{"type":13,"tag":28,"props":252,"children":253},{},[254],{"type":13,"tag":95,"props":255,"children":258},{"alt":256,"src":257},"20230917220738","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917220738.png",[],{"type":13,"tag":28,"props":260,"children":261},{},[262],{"type":19,"value":263},"之后，填一下 Commit message（关于提交的信息），这里最好用英文，为啥中文本地化贡献者都是中文用的很熟练的人，却要用英文咧？这是因为 MDN 是一个全球性的开源社区，里面的很多贡献者未必会中文，如果用英语的话，可以让其他语言的人也能参与进去。",{"type":13,"tag":28,"props":265,"children":266},{},[267],{"type":13,"tag":95,"props":268,"children":271},{"alt":269,"src":270},"20230917221050","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917221050.png",[],{"type":13,"tag":28,"props":273,"children":274},{},[275],{"type":19,"value":276},"之后，点“Propose changes”按钮（还是提交修改的意思）。",{"type":13,"tag":28,"props":278,"children":279},{},[280],{"type":19,"value":281},"之后来到 Comparing Changes 页面（比较修改页面），这个页面信息比较多，不要慌，这里其实很简单，就是以直观的方式显示你所作的修改（红色为原文，绿色为修改后的文章）。",{"type":13,"tag":28,"props":283,"children":284},{},[285],{"type":13,"tag":95,"props":286,"children":289},{"alt":287,"src":288},"20230917221735","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917221735.png",[],{"type":13,"tag":28,"props":291,"children":292},{},[293],{"type":19,"value":294},"之后点击那个“Create pull request”按钮（pull request，简称 PR，就是拉取请求的意思，可以理解为请求拥有仓库（这里是 MDN 文档）管理权限的管理员接受你对代码（这里是文档）的修改）。",{"type":13,"tag":28,"props":296,"children":297},{},[298],{"type":19,"value":299},"之后，来到“Open a pull request”页面。（创建一个拉取请求）",{"type":13,"tag":28,"props":301,"children":302},{},[303],{"type":13,"tag":95,"props":304,"children":307},{"alt":305,"src":306},"20230917222626","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917222626.png",[],{"type":13,"tag":28,"props":309,"children":310},{},[311,313],{"type":19,"value":312},"最后一步了！",{"type":13,"tag":43,"props":314,"children":315},{},[316],{"type":19,"value":317},"激不激动",{"type":13,"tag":28,"props":319,"children":320},{},[321],{"type":19,"value":322},"这里简单地填一下信息就行了。依然是最好用英文填。",{"type":13,"tag":28,"props":324,"children":325},{},[326],{"type":13,"tag":95,"props":327,"children":330},{"alt":328,"src":329},"20230917223203","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917223203.png",[],{"type":13,"tag":28,"props":332,"children":333},{},[334,336],{"type":19,"value":335},"注意这里我在标题那里标了一个“zh-CN”前缀，这是干啥用的捏？记得我前面说的吗？MDN 是个全球社群，你看这个“Pull Request”列表里就有“ko”（Korea，韩文）、“zh”（中文）、“ja”（日语）和“fr”（法语），标一个语言前缀可以方便辨认具体是来自哪个语言的 Pull Request。",{"type":13,"tag":43,"props":337,"children":338},{},[339],{"type":19,"value":340},"其实你不标，MDN 的 bot 也会自动给你打上语言标签的啦（在每个 PR 标题的后面）。",{"type":13,"tag":28,"props":342,"children":343},{},[344,349],{"type":13,"tag":95,"props":345,"children":348},{"alt":346,"src":347},"20230917223407","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917223407.png",[],{"type":13,"tag":43,"props":350,"children":351},{},[352],{"type":19,"value":353},"万国来朝",{"type":13,"tag":28,"props":355,"children":356},{},[357],{"type":13,"tag":95,"props":358,"children":359},{"alt":328,"src":329},[],{"type":13,"tag":28,"props":361,"children":362},{},[363,365,372],{"type":19,"value":364},"回到正题，这里“same as title”就是同标题的意思，下面哪个“ditto”是啥意思呢？“ditto”来自于托斯卡纳方言，可以追溯道意大利语的“detto”，再往上可以追溯到拉丁文的“said”，就是“一样（在这里是和上文一样）”的意思，这个也是我从 MDN 的另一个本地化贡献者 ",{"type":13,"tag":32,"props":366,"children":369},{"href":367,"rel":368},"https://github.com/JasonLamv-t",[36],[370],{"type":19,"value":371},"@JasonLamv-t",{"type":19,"value":373}," 大佬那里学到的😁。",{"type":13,"tag":28,"props":375,"children":376},{},[377],{"type":19,"value":378},"之后，点击“create pull request”按钮。",{"type":13,"tag":28,"props":380,"children":381},{},[382],{"type":13,"tag":95,"props":383,"children":386},{"alt":384,"src":385},"20230917224955","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917224955.png",[],{"type":13,"tag":28,"props":388,"children":389},{},[390,392,397],{"type":19,"value":391},"到此任务就完成了，接下来等 MDN 的管理员来处理你的 Pull Request 并拉取就可以啦。",{"type":13,"tag":43,"props":393,"children":394},{},[395],{"type":19,"value":396},"才怪，管理员给建议之后，你要按建议改才行",{"type":19,"value":398}," 等你的修改被接受（专业术语，merge）之后，过一段时间，你就可以在那篇 MDN 文档那里看到你的修改了，当然 Github 的那篇文章的 commit history（提交历史）上也永远地留下了你的足迹！",{"type":13,"tag":28,"props":400,"children":401},{},[402],{"type":19,"value":403},"备注：提交 PR 之后，发现有漏网之鱼是很正常的事情，那么该怎么修改呢，答案是点那三个点之后再点 Edit file 就行了，之后按照前面的提到的 PR 流程自然走就行了。",{"type":13,"tag":28,"props":405,"children":406},{},[407],{"type":13,"tag":95,"props":408,"children":411},{"alt":409,"src":410},"20230917233310","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230917233310.png",[],{"type":13,"tag":106,"props":413,"children":415},{"id":414},"进阶级翻译整篇文章",[416],{"type":19,"value":417},"进阶级：翻译整篇文章",{"type":13,"tag":28,"props":419,"children":420},{},[421],{"type":19,"value":422},"那么接下来，如果你还有余力的话，就可以参与整篇文章的本地化了。",{"type":13,"tag":28,"props":424,"children":425},{},[426],{"type":19,"value":427},"那么怎么需要翻译的文章呢？这里提供两个技巧：",{"type":13,"tag":126,"props":429,"children":430},{},[431],{"type":13,"tag":130,"props":432,"children":433},{},[434],{"type":19,"value":435},"MDN 文档语言调成简体中文，之后看到目录里后头标有（en-US）的，都是待本地化的文章。",{"type":13,"tag":28,"props":437,"children":438},{},[439],{"type":13,"tag":95,"props":440,"children":443},{"alt":441,"src":442},"20230926214700","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230926214700.png",[],{"type":13,"tag":126,"props":445,"children":447},{"start":446},2,[448],{"type":13,"tag":130,"props":449,"children":450},{},[451],{"type":19,"value":452},"MDN 文档语言调成英文，之后点击打开语言列表，如果里面没有“简体中文”的选项，那么就说明这篇文章待本地化。",{"type":13,"tag":28,"props":454,"children":455},{},[456],{"type":13,"tag":95,"props":457,"children":460},{"alt":458,"src":459},"20230926213957","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230926213957.png",[],{"type":13,"tag":28,"props":462,"children":463},{},[464],{"type":19,"value":465},"如果是涉及到创建整篇文档的话，那么直接在 Github 页面里修改就不那么适当了。这个时候我们就要用到 Git 了（回想当初刚参与贡献时也是在 Git 上踩了不少坑啊 （；´д｀）ゞ 希望我的这点经验能帮助新人少踩点坑吧）。",{"type":13,"tag":467,"props":468,"children":470},"h4",{"id":469},"git-简单介绍",[471],{"type":19,"value":472},"Git 简单介绍",{"type":13,"tag":28,"props":474,"children":475},{},[476],{"type":19,"value":477},"简单介绍一下 Git 的来历。Git 是 Linux 内核的作者 Linus Torvalds 开发的。他为啥要开发 Git 呢？要知道 Linux 内核是一个几千万行代码的庞大项目，而且 Linux 内核源码的贡献者来自世界各地，组织结构很松散，管理起来可不是个容易事。为了方便 Linux 内核源码的管理，Torvalds 创建了 Git。连 Linux 内核源码都能轻松管理，MDN 文档源码更是不在话下了。",{"type":13,"tag":467,"props":479,"children":481},{"id":480},"git-的简要流程",[482],{"type":19,"value":483},"Git 的简要流程：",{"type":13,"tag":28,"props":485,"children":486},{},[487],{"type":19,"value":488},"预准备工作：",{"type":13,"tag":126,"props":490,"children":491},{},[492,515,527],{"type":13,"tag":130,"props":493,"children":494},{},[495,497,504,506,513],{"type":19,"value":496},"首先，我们要安装 ",{"type":13,"tag":32,"props":498,"children":501},{"href":499,"rel":500},"https://git-scm.com",[36],[502],{"type":19,"value":503},"Git",{"type":19,"value":505}," 还有 ",{"type":13,"tag":32,"props":507,"children":510},{"href":508,"rel":509},"https://code.visualstudio.com",[36],[511],{"type":19,"value":512},"VS code",{"type":19,"value":514},"。",{"type":13,"tag":130,"props":516,"children":517},{},[518,520,525],{"type":19,"value":519},"进入项目的 Github 主页 ",{"type":13,"tag":32,"props":521,"children":523},{"href":79,"rel":522},[36],[524],{"type":19,"value":79},{"type":19,"value":526}," 。",{"type":13,"tag":130,"props":528,"children":529},{},[530,532,538,540,544,546,550,552,558],{"type":19,"value":531},"点这个“Fork 按钮”。这个 ",{"type":13,"tag":533,"props":534,"children":535},"code-inline",{},[536],{"type":19,"value":537},"Fork",{"type":19,"value":539}," 是啥呢？简单来说 ",{"type":13,"tag":533,"props":541,"children":542},{},[543],{"type":19,"value":537},{"type":19,"value":545}," 操作就是创建一个自己的仓库再把要参与贡献的项目的仓库（这里是 MDN 仓库）复制到自己的仓库（不是复制代码哦，而是把所有的 commit history（提交历史，指提交的对仓库内容的修改）都复制过去）。为啥要有这样的操作呢？因为你是没有原仓库的修改权限的，要做什么修改只能经过管理员许可才行。而把仓库 ",{"type":13,"tag":533,"props":547,"children":548},{},[549],{"type":19,"value":537},{"type":19,"value":551}," 过来之后，你就拥有了一个",{"type":13,"tag":553,"props":554,"children":555},"strong",{},[556],{"type":19,"value":557},"拥有修改权限的",{"type":19,"value":559},"并且和要贡献的仓库代码一模一样的自己的仓库，这样你就可以随意修改而不需要经过他人许可了。",{"type":13,"tag":28,"props":561,"children":562},{},[563],{"type":13,"tag":95,"props":564,"children":567},{"alt":565,"src":566},"20230926220719","https://cdn.jsdelivr.net/gh/hanyujie2002/my_pictures/images/20230926220719.png",[],{"type":13,"tag":126,"props":569,"children":571},{"start":570},4,[572,582,594],{"type":13,"tag":130,"props":573,"children":574},{},[575,577],{"type":19,"value":576},"打开 Git Bash，输入以下指令生成你的 ssh 密钥：",{"type":13,"tag":533,"props":578,"children":579},{},[580],{"type":19,"value":581},"ssh-keygen -t rsa -C \"youremail@example.com\"",{"type":13,"tag":130,"props":583,"children":584},{},[585,587,592],{"type":19,"value":586},"输入指令 ",{"type":13,"tag":533,"props":588,"children":589},{},[590],{"type":19,"value":591},"cat ~/.ssh/id_rsa.pub",{"type":19,"value":593},"，得到公钥",{"type":13,"tag":130,"props":595,"children":596},{},[597,599,606],{"type":19,"value":598},"打开这个网址 ",{"type":13,"tag":32,"props":600,"children":603},{"href":601,"rel":602},"https://github.com/settings/keys%EF%BC%8C%E4%B9%8B%E5%90%8E%E7%82%B9",[36],[604],{"type":19,"value":605},"https://github.com/settings/keys，之后点",{"type":19,"value":607}," New SSH key，然后标题随便输一个，再把公钥粘贴进去就行了。",{"type":13,"tag":28,"props":609,"children":610},{},[611],{"type":19,"value":612},"由于本教程是 MDN 本地化贡献教程，没办法把 Git 介绍的很详细。这里简要介绍一下 Git 的工作流程：",{"type":13,"tag":126,"props":614,"children":615},{},[616,633,638,648,658,668,693,698,721,726],{"type":13,"tag":130,"props":617,"children":618},{},[619,621,626,628],{"type":19,"value":620},"把仓库克隆到本地（也就是自己的电脑） ",{"type":13,"tag":533,"props":622,"children":623},{},[624],{"type":19,"value":625},"Git clone \u003Crepo-url>",{"type":19,"value":627},"，这里的指令应该是 ",{"type":13,"tag":533,"props":629,"children":630},{},[631],{"type":19,"value":632},"https://github.com/\u003C你的 Github 用户名>/translated-content",{"type":13,"tag":130,"props":634,"children":635},{},[636],{"type":19,"value":637},"用 VS code 打开本地仓库",{"type":13,"tag":130,"props":639,"children":640},{},[641,643],{"type":19,"value":642},"设置 upstream（上游）仓库：",{"type":13,"tag":533,"props":644,"children":645},{},[646],{"type":19,"value":647},"git remote add upstream https://github.com/mdn/translated-content.git",{"type":13,"tag":130,"props":649,"children":650},{},[651,653],{"type":19,"value":652},"来到主分支：",{"type":13,"tag":533,"props":654,"children":655},{},[656],{"type":19,"value":657},"git checkout main",{"type":13,"tag":130,"props":659,"children":660},{},[661,663],{"type":19,"value":662},"拉取最新的 commit：",{"type":13,"tag":533,"props":664,"children":665},{},[666],{"type":19,"value":667},"git pull upstream main",{"type":13,"tag":130,"props":669,"children":670},{},[671,673,678,680,685,687,691],{"type":19,"value":672},"创建一个新的分支（",{"type":13,"tag":533,"props":674,"children":675},{},[676],{"type":19,"value":677},"git checkout -b \u003C新分支名称> main",{"type":19,"value":679}," 为例），这里创建新分支的目的是不要污染自己的主分支（注意，主分支的作用仅应该是与上游仓库同步，其应永远保持仅作为其他分支的基础，而不应该直接在主分支进行修改）。命令后面那个 ",{"type":13,"tag":533,"props":681,"children":682},{},[683],{"type":19,"value":684},"main",{"type":19,"value":686}," 的意思是新分支以 ",{"type":13,"tag":533,"props":688,"children":689},{},[690],{"type":19,"value":684},{"type":19,"value":692}," 分支的 commit 历史为基础。",{"type":13,"tag":130,"props":694,"children":695},{},[696],{"type":19,"value":697},"在项目文件夹里做自己的工作（在这里即翻译文档）（在这里才开始正式工作，Git 真的挺难入门的，但是入门之后就会越用越爽，这一点和 Vim 类似，这也比较符合我的工具审美）。",{"type":13,"tag":130,"props":699,"children":700},{},[701,703,708,710,715,716],{"type":19,"value":702},"工作完成后，依次输入 ",{"type":13,"tag":533,"props":704,"children":705},{},[706],{"type":19,"value":707},"git add .",{"type":19,"value":709},"、",{"type":13,"tag":533,"props":711,"children":712},{},[713],{"type":19,"value":714},"git commit -m \u003C你的提交信息>",{"type":19,"value":505},{"type":13,"tag":533,"props":717,"children":718},{},[719],{"type":19,"value":720},"git push origin \u003C新分支名称>",{"type":13,"tag":130,"props":722,"children":723},{},[724],{"type":19,"value":725},"打开 MDN translated-content 仓库 Github 页面，你会看到一个黄色的 pull request 提示，点击之后步骤和之前的 pull request 差不多。",{"type":13,"tag":130,"props":727,"children":728},{},[729],{"type":19,"value":730},"想再做出新的 commit 的话，回到第三步并不断循环。",{"type":13,"tag":21,"props":732,"children":734},{"id":733},"总结",[735],{"type":19,"value":733},{"type":13,"tag":28,"props":737,"children":738},{},[739,741,747],{"type":19,"value":740},"本篇文章先是介绍了如何在 Github 网页上贡献 MDN 翻译，之后介绍了如何用 Git 来贡献翻译。如果这篇文章能对你有帮助，那我真是荣幸之至。如何有什么问题的话，欢迎通过 email 联系我。我的邮箱地址是 ",{"type":13,"tag":32,"props":742,"children":744},{"href":743},"mailto:yujiehan2002@outlook.com",[745],{"type":19,"value":746},"yujiehan2002@outlook.com",{"type":19,"value":514},{"title":7,"searchDepth":446,"depth":446,"links":749},[750,751,752,757],{"id":23,"depth":446,"text":26},{"id":50,"depth":446,"text":53},{"id":102,"depth":446,"text":102,"children":753},[754,756],{"id":108,"depth":755,"text":111},3,{"id":414,"depth":755,"text":417},{"id":733,"depth":446,"text":733},"markdown","content:blog:zh:2.MDN_localization_tutorial.md","content","blog/zh/2.MDN_localization_tutorial.md","md",1696766280820]